PART
{
// --- general parameters ---
name = luna_ktdu
module = Part
author = Raidernick

MODEL
	{
	  model = RN_Soviet_Probes/luna9-10/ktdu
          scale = 0.80, 0.80, 0.80
	}
// --- asset parameters ---
//mesh = ktdu.mu
scale = 0.80
rescaleFactor = 1
// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z

node_stack_v1 = -0.58858, -0.66505, 0.58735, 0.0, -1.0, 0.0, 0
node_stack_v2 = 0.58663, -0.66618, 0.59037, 0.0, -1.0, 0.0, 0
node_stack_v3 = 0.58965, -0.66959, -0.58484, 0.0, -1.0, 0.0, 0
node_stack_v4 = -0.58556, -0.66846, -0.58786, 0.0, -1.0, 0.0, 0
node_stack_top = 0.0, 0.91398, 0.0, 0.0, 1.0, 0.0, 0
node_stack_bottom = 0.0, -1.70386, 0.0, 0.0, -1.0, 0.0, 1

node_stack_s1 = -0.00017, 0.01659, -0.46676, 0.0, 1.0, 0.0, 0
node_stack_s2 = -0.00292, 0.01932, 0.4738, 0.0, 1.0, 0.0, 0

// --- FX definitions ---

fx_exhaustFlame_blue_small = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, 0.3, 0.0, 0.0, 1.0, 0.0, running

// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout


// --- editor parameters ---
TechRequired = generalRocketry
entryCost = 500
cost = 8000
category = Propulsion
subcategory = 0
title = Luna 9-10 KTDU
manufacturer = RN Industries
description = Propulsion unit for Luna 9 and 10. EXTEND AND RETRACT ANTENNAS IF ANY LAG OCCURS AND THAT SHOULD FIX IT!
attachRules = 1,0,1,1,1
stackSymmetry = 3

// --- standard part parameters ---
mass = 1.292
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.3
angularDrag = 2
crashTolerance = 50
maxTemp = 2000
breakingForce = 2000000
breakingTorque = 50000000
linearStrength = 22000000
angularStrength = 22000000
emissiveConstant = 0.8
stagingIcon = LIQUID_ENGINE

MODULE
{
name = TankPriorityModule
Priority = 20
}

RESOURCE
{
 name = MonoPropellant
 amount = 250
 maxAmount = 250
}
 
MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = True
	exhaustDamageMultiplier = 20
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 10
	heatProduction = 40
	fxOffset = 0, 0, 0
	EngineType = MonoProp
	PROPELLANT
	{
		name = MonoPropellant
       	        ratio = 1
		DrawGauge = True
	}
	
	atmosphereCurve
 	{
   	 key = 0 200
  	 key = 1 100
 	}
}

MODULE
{
	name = ModuleRCS
	thrusterTransformName = RCSthruster
	thrusterPower = 0.01
	resourceName = MonoPropellant
	atmosphereCurve
 	{
   	 key = 0 260
  	 key = 1 100
 	}
}

MODULE
{
	name = ModuleSurfaceFX
	thrustProviderModuleIndex = 0
	fxMax = 0.3
	maxDistance = 30
	falloff = 1.7
	thrustTransformName = thrustTransform
}

MODULE
{
	name = ModuleAnimateGeneric
	animationName = Deploy
	startEventGUIName = Extend Ground Sensor
	endEventGUIName = Retract Ground Sensor
	actionGUIName = Toggle Ground Sensor
	
}

//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = ORBGroup53,ORBGroup54,ORBGroup19,ORBGroup52,ORBGroup16,ORBGroup49,ORBGroup1,ORBGroup48,ORBGroup47,GS1,GS2

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}
