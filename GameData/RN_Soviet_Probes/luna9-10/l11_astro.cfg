PART
{
// --- general parameters ---
name = l11_astro
module = Part
author = Raidernick


MODEL
	{
	  model = RN_Soviet_Probes/luna9-10/l11_astro
          scale = 0.80, 0.80, 0.80
	}
// --- asset parameters ---
//mesh = l11_astro.mu
scale = 0.80
rescaleFactor = 1
// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z

node_stack_side = -0.00309, 0.01935, -0.26482, 0.0, -1.0, 0.0, 0

// --- editor parameters ---
TechRequired = generalRocketry
entryCost = 500
cost = 1000
category = Utility
subcategory = 0
title = Luna 11 Astro
manufacturer = RN Industries
description = Astro unit for Luna 11. Contains batteries. Decouple before doing landing burn.
attachRules = 1,0,1,1,1

// --- standard part parameters ---
mass = 0.096
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.3
angularDrag = 2
crashTolerance = 50
maxTemp = 2000
breakingForce = 2000000
breakingTorque = 50000000
linearStrength = 22000000
angularStrength = 22000000

RESOURCE
{
 name = ElectricCharge
 amount = 500
 maxAmount = 500
}

MODULE
{
    name = ModuleDecouple
    ejectionForce = 15
	explosiveNodeID = side
}

MODULE
{
name = TankPriorityModule
Priority = 30
}

MODULE
{
name = FSanimateGeneric
animationName = Deploy
startEventGUIName = Deploy Antenna
endEventGUIName = Retract Antenna
toggleActionName = Toggle Antenna
startDeployed = False
// Animation Layer. If you have more than one animation on a part, this must be unique for each one in order for them to not interrupt each other. If the stock engine heat animation module is used, that’s probably on layer 0, so make this 1 or higher.
layer = 1
playAnimationOnEditorSpawn = False
useActionEditorPopup = True
// If you have more than one FSanimateGeneric on a part, give each a unique ID to. This makes the popup menu appear in a separate location for each module, and not steal each others windows. values: 0-9.
moduleID = 0
}


//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = ORBGroup18_002,cone_ant_base,Cylinder_004,Cylinder_005,Cylinder_003,red_ribs

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}
